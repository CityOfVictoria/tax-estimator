var gulp = require('gulp');
var react = require('gulp-react');
var uglify = require('gulp-uglify');
var order = require('gulp-order');
var concat = require('gulp-concat');
var del = require('del');
var autoprefixer = require('gulp-autoprefixer');
var header = require('gulp-header');
var wrap = require('gulp-wrap');


gulp.task('clean:tmp', function (cb) {
  del([
    'tmp/**'
  ], {force:true}, cb);
});

gulp.task('clean:dist', function (cb) {
  del([
    './dist/**'
  ], {force:true}, cb);
});

var reactFiles = ['src/components/*.jsx'];
gulp.task('react',['clean:tmp'],function(){
    return gulp.src(reactFiles)
    .pipe(react())
    .pipe(uglify())
    .pipe(gulp.dest('./tmp'));
});

gulp.task('assets',['clean:dist'],function(){
    return gulp.src('src/assets/**')
    .pipe(gulp.dest('./dist'));
});

var vendorFiles = []
gulp.task('concat-js',['react','clean:dist'],function(){
    return gulp.src(['src/vendor/*.min.js','tmp/**/*.js'])
    .pipe(order([
        'src/vendor/*.min.js',
        'tmp/**/*.js'
    ]))
    .pipe(concat('tax-estimator.js'))
    .pipe(wrap('(function(){\n<%= contents %>\n})();'))
    .pipe(header('/* THIS FILE WAS GENERATED BY A TOOL do not edit this file; edit the source */\n/* THIS FILE WAS GENERATED BY A TOOL do not edit this file; edit the source */\n/* THIS FILE WAS GENERATED BY A TOOL do not edit this file; edit the source */\n'))
    .pipe(gulp.dest('./dist'));
});

gulp.task('default',['assets','concat-js']);